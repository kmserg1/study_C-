Урок No1. Введение впрограммирование

1. Машинный язык
Например, одна команда машинного кода архитектуры ×86 выглядит следующим образом:
1011000001100001

2. Язык ассемблера
В этомязыке каждая машинная команда идентифицируется коротким именем (а не набором единиц с нулями), и переменными можно
управлятьчерез их имена. 
Например, вот выше приведенная команда, но уже на языкеассемблера:
mov al, 061h

3. Высокоуровневые языки программирования
C, C++,Pascal,Java, JavaScript и Perl — это всёя зыки высокого уровня. Они позволяют писать и выполнять
программы,не переживая о совместимости кода с разными архитектурами процессоров. Программы, написанные на языках
высокого уровня, также должны быть переведены в машинный код перед выполнением. Есть два варианта:

  компиляция, которая выполняется компилятором;
  интерпретация, которая выполняется интерпретатором.

Компилятор — это программа, которая читает код и создает автономную (способную работать независимо от другого
аппаратного или программного обеспечения) исполняемую программу, которую процессор понимает напрямую. При запуске
программы весь код компилируется целиком, а затем создается исполняемый файл и уже при повторном запуске программы
компиляция не выполняется.

Интерпретатор — это программа, которая напрямую выполняет код, без его предыдущей компиляции в исполняемый файл.
Интерпретаторы более гибкие, но менее эффективные, так как процесс интерпретации выполняется повторно при каждом
запуске программы.
			       	  	

4. Преимущества высокоуровневых языков программирования

Преимущество No1: Легче писать/читать код.
Вот выше приведенная команда, но уже на языке C++:
а = 97;

Преимущество No2: Требуется меньше инструкций для выполнения определенного задания. Вязыке C++ вы можете сделать
что-то вроде а = Ь * 2 + 5; в одной строке. В языке ассемблера вам пришлось бы использовать 5 или 6 инструкций.

Преимущество No3: Вы не должны заботиться о таких деталях, как загрузка переменных в регистры процессора. Компилятор
или интерпретатор берёт это на себя.

ПреимуществоNo4: Высокоуровневые языки программирования более портируемые под различные архитектуры (но есть
один нюанс).
Нюанс заключается в том,что многие платформы,такие как Microsoft Windows, имеют свои собственные специфические
функции, с помощью которых писать код намного легче. Но в таком случае приходится жертвовать портируемостью, так как
функции, специфические для одной платформы, с большей долей вероятности, не будут работать на другой платформе. Обо
всем этом мы детально поговорим на следующих уроках.													   	