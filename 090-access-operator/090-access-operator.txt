Урок No 90. Оператор доступа к членам через указатель
https://ravesli.com/urok-90-operator-dostupa-k-chlenam-cherez-ukazatel/

Обычно есть либо указатель, либо ссылка на структуру/класс. Как мы уже знаем из предыдущих
уроков, доступ к члену структуры осуществляется через оператор выбора члена (.) (или «оператор
доступа к члену»):

1 struct Man
2 {
3 	int weight;
4 	double height;
5 };
6 Man man;
7
8 // Доступ к члену осуществляется через использование фактической переменной структуры Man
9 man.weight = 60;

Этот синтаксис также работает и со ссылками:
1 struct Man
2 {
3 	int weight;
4 	double height;
5 };
6 Man man; // определяем переменную структуры Man
7
8 // Доступ к члену осуществляется через ссылку на переменную структуры Man
9 Man &ref = man;
10 ref.weight = 60;

Однако, в случае с указателем, вам нужно его сначала разыменовать:

1 struct Man
2 {
3 int weight;
4 double height;
5 };
6 Man man;
7
8 // Доступ к члену осуществляется через указатель на переменную структуры Man
9 Man *ptr = &man;
10 (*ptr).weight = 60;

Обратите внимание, разыменование указателя должно находиться в круглых скобках, поскольку
оператор выбора члена имеет более высокий приоритет, чем оператор разыменования.
Поскольку синтаксис доступа к членам структур/классов с помощью указателя несколько неудобен, то
C++ предоставляет второй оператор выбора членов (->) для осуществления доступа к членам через
указатель. Следующие две строки идентичны:

1 (*ptr).weight = 60;
2 ptr->weight = 60;

Это не только легче писать, но и этот способ так же менее подвержен ошибкам, поскольку здесь
разыменование выполняется неявно, поэтому нет проблем с приоритетом, о котором нужно помнить.
Следовательно, при доступе к членам структур или классов через указатель, всегда используйте
оператор -> вместо оператора ..
Правило: При использовании указателя для доступа к значению члена структуры или класса
используйте оператор «->» вместо оператора «.».