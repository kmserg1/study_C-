Урок No11.cout, cin и endl

На этом уроке мы рассмотрим такие объекты, как cout, endl и cin, существующие в языке C++.

Оглавление:
1. Объектstd::cout
2. Объектstd::endl
3. Объектstd::cin
4. std::cin,std::cout,<< и >>

Объект std::cout
Как мы уже говорили на предыдущих уроках, объект std::cout (который находится в библиотеке iostream) используется для
вывода данных на экран (в консольное окно). В качестве напоминания, вот наша программа «Hello, world!»:

1 #include <iostream>
2
3 int main()
4 {
5 std::cout<< "Hello, world!";
6 return 0;
7 }

Для вывода нескольких предложений на одной строке оператор вывода << нужно использовать несколько раз, например:
1 #include <iostream>
2
3 int main()
4 {
5 int a = 7;
6 std::cout << "a is " << a;
7 return 0;
8 }

Программа выведет:
a is 7

А какой результат выполнения следующей программы?

1 #include <iostream>
2
3 int main()
4 {
5 std::cout << "Hi!";
6 std::cout << "Myname is Anton.";
7 return 0;
8 }

Возможно, выудивитесь, но:
Hi!My name is Anton.


Объект std::endl
Если текст нужно вывести раздельно (на нескольких строках) — используйте std::endl. При использовании с std::cout,std::endl
вставляет символ новой строки. Таким образом, мы перемещаемся к началу следующей строки, например

1 #include <iostream>
2
3 int main()
4 {
5 std::cout << "Hi!" << std::endl;
6 std::cout << "Myname is Anton." << std::endl;
7 return 0;
8 }

Результат:
Hi!
My name is Anton.


Объект std::cin
std::cin является противоположностью std::cout. В то время как std::cout выводит данные в консоль с помощьюо ператора
вывода << , std::cin получает данные от пользователя с помощьюоператораввода >>. Используя std::cin мы можем получать
и обрабатывать пользовательский ввод:

1 #include <iostream>
2
3 int main()
4 {
5 std::cout<< "Enter anumber: ";// просим пользователя ввести любое число
6 int a = 0;
7 std::cin >> a; // получаем пользовательское число и сохраняемего впеременную a
8 std::cout<< "You entered "<< a<< std::endl;
9 return 0;
10 }

Попробуйте скомпилироватьи запустить эту программу. При запуске вы увидите Enter a number: , а затем программа будет
ждать, пока вы укажите число. Как только вы это сделаете и нажмете Enter, программа выведет You entered , а затем ваше
число.
Например (я ввел 7):

Enter a number: 7
You entered 7

Это самый простой способ получения данных от пользователя. Мы будем его использовать в дальнейших примерах.
Если ваше окно закрывается сразу после ввода числа — смотрите Урок No7 (там есть решениеданной проблемы).
Если же ввести действительно большое число, то вы получите переполнение, так как переменная а можетсодержать числа
только определенного размера/диапазона. Если число больше/меньше допустимых максимумов/минимумов, то происходит
переполнение. Обэтом мы детально поговоримна следующих уроках.

std::cin,std::cout, << и>>
Новичкичастопутают std::cin сstd::cout и << с >>.Вот простыеспособы запомнитьихразличия:
 std::cin и std::cout всегда находятся в левой стороне стейтмента;
 std::cout используется для вывода значения(cOUT= вывод);
 std::cin используется для получения значения (cIN =ввод);
 оператор вывода << используетсяс std::cout ипоказывает направление,в котором данныедвижутся от r-value в
консоль. std::cout << 7; (значение 7 перемещаетсяв консоль);
 оператор ввода >> используется с std::cin и показывает направление, в котором данные движутся из консоли в
переменную. std::cin >> a; (значение из консоли перемещается в переменную a ).
