Урок No29. Тип данных void


Тип void — это самый простой тип данных, который означает «отсутствие любого типа данных». Следовательно,
переменные не могут быть типа void:

1 void value; // не будет работать, так как переменная не может иметь тип void

Тип void, как правило, используется в трех случаях:

Использование No 1: Указать, что функция не возвращает значение:

1 void writeValue(int x) // здесь void означает, что функция не возвращает никакое значение
2 {
3 std::cout << "The value of x is: " << x << std::endl;
4 // Нет стейтмента return, так как тип функции - void
5 }

Использование No 2: Указать, что функция не имеет никаких параметров (перешло из языка Cи):

1 int getValue(void) // здесь void означает, что функция не имеет никаких параметров
2 {
3 int x;
4 std::cin >> x;
5 return x;
6 }

Указание типа void как «никаких параметров» является пережитком, сохранившимся еще со времен языка Cи. Следующий
код равнозначен и более предпочтителен для использования в языке C++:

1 int getValue() // пустые скобки означают то же, что и void
2 {
3 int x;
4 std::cin >> x;
5 return x;
6 }

Правило: Используйте пустой список параметров вместо void для указания отсутствия параметров в функции.

Использование No 3: Ключевое слово void имеет третий (более продвинутый) способ использования в языке C++, который
мы будем рассматривать на уроке No 92.
